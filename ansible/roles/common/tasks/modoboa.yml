---
-
  name: download modoboa with pip
  command:  pip install modoboa
            creates=/usr/bin/modoboa-admin.py
-
  name: check if modoboa app exists already
  stat: path=/var/www/{{ modoboa_name }}
  register: modoboaDir
-
  name: install modoboa
  tags: modoboa_install
  when: modoboaDir.stat.isdir is undefined
  shell: modoboa-admin.py deploy {{ modoboa_name }} --syncdb --collectstatic --with-amavis --dburl {{ database_type }}://{{ database_user }}:{{ database_password }}@localhost/{{ database_name }} --amavis_dburl oracle://amavis:amavis@localhost/amavis --domain {{ ansible_domain }}
            chdir=/var/www
-
  name: install mod_wsgi
  tags: modoboa_install
  apt: name={{ item }} state=present
  with_items:
    - mod_wsgi
-
  name: copy wsgi.conf
  tags: modoboa_install
  copy: src=wsgi.conf dest=/etc/httpd/conf.d/
-
  name: copy wsgi.py template
  tags:
    - modoboa_install
    - wsgi.py
  template: src=wsgi.py dest=/var/www/{{ modoboa_name }}/{{ modoboa_name }}/
-
  name: copy modoboa-server.conf
  tags: modoboa-server.conf
  template: src=modoboa-server.conf
            dest=/etc/httpd/conf.d/virtual_hosts
  notify: restart apache
-
  name: add modoboa to postfix's cronjobs
  command: bash /mnt/ansible/scripts/add_modoboa_cron_jobs.sh {{ modoboa_name }}
  notify: restart crond
-
  name: check if sql-domains.cf exists
  stat: path=/etc/postfix/sql-domains.cf
  register: sqlDomainsExists
# -
#   name: run script if /etc/postfix/sql-domains.cf doesn't exist yet
#   when: sqlDomainsExists.stat.isfile is undefined
#   tags: test
#   shell: modoboa-admin.py postfix_maps --dbtype mysql /etc/postfix <<< $'localhost\n{{ database_name }}\n{{ database_user }}\n'
